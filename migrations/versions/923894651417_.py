"""empty message

Revision ID: 923894651417
Revises: 
Create Date: 2025-07-31 11:15:11.350836

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '923894651417'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_number', sa.String(length=255), nullable=True),
    sa.Column('account_title', sa.String(length=255), nullable=True),
    sa.Column('account_description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(), nullable=True),
    sa.Column('pass_word', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('staff', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('salt', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor_name', sa.String(length=255), nullable=True),
    sa.Column('tin', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin_account',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('account_id', 'user_id')
    )
    op.create_table('admin_vendor',
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('vendor_id', 'user_id')
    )
    op.create_table('disbursement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.String(), nullable=True),
    sa.Column('record_number', sa.String(), nullable=True),
    sa.Column('po_number', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('ap_number', sa.String(), nullable=True),
    sa.Column('prepared_by', sa.String(), nullable=True),
    sa.Column('checked_by', sa.String(), nullable=True),
    sa.Column('approved_by', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('submitted', sa.String(), nullable=True),
    sa.Column('cancelled', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_account',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('account_id', 'user_id')
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('user_vendor',
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('vendor_id', 'user_id')
    )
    op.create_table('admin_disbursement',
    sa.Column('disbursement_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['disbursement_id'], ['disbursement.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('disbursement_id', 'user_id')
    )
    op.create_table('disbursement_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disbursement_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('debit', sa.Float(), nullable=True),
    sa.Column('credit', sa.Float(), nullable=True),
    sa.Column('side_note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['disbursement_id'], ['disbursement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_disbursement',
    sa.Column('disbursement_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['disbursement_id'], ['disbursement.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('disbursement_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_disbursement')
    op.drop_table('disbursement_detail')
    op.drop_table('admin_disbursement')
    op.drop_table('user_vendor')
    op.drop_table('user_role')
    op.drop_table('user_account')
    op.drop_table('disbursement')
    op.drop_table('admin_vendor')
    op.drop_table('admin_account')
    op.drop_table('vendor')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('account')
    # ### end Alembic commands ###
